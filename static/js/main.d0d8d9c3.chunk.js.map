{"version":3,"sources":["pages/About.tsx","store.ts","components/TodoItem.tsx","components/TodoList.tsx","pages/Home.tsx","Application.tsx","index.tsx"],"names":["About","data-testid","DEFAULT_STATE","items","done","text","rootReducer","state","action","type","index","TodoItem","props","dispatch","useDispatch","useSelector","onChange","useCallback","setDone","className","checked","TodoList","target","setText","value","onClick","addItem","map","i","Home","Application","to","path","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"mMAEaA,EAAY,WACrB,OACI,qCACI,oBAAIC,cAAY,aAAhB,mBACA,kG,sCCINC,EAAgB,CAAEC,MAFV,CAAC,2EAAgB,+FAAqB,mFAErBC,KAAM,GAAIC,KAAM,IAUzCC,EAAc,WAA8D,IAA7DC,EAA4D,uDAAlCL,EAAeM,EAAmB,uCAC7E,OAAQA,EAAOC,MACX,IAAK,WACD,OAAO,2BACAF,GADP,IAEIF,KAAM,GACNF,MAAM,GAAD,mBAAMI,EAAMJ,OAAZ,CAAmBK,EAAOH,SAEvC,IAAK,WACD,OAAO,2BACAE,GADP,IAEIF,KAAMG,EAAOH,OAErB,IAAK,WACD,OAAO,2BACAE,GADP,IAEIH,KAAK,2BACEG,EAAMH,MADT,kBAECI,EAAOE,MAAQF,EAAOJ,SAGnC,QACI,OAAOG,ICtCZ,IAAMI,EAAkC,SAAAC,GAC3C,IAAQF,EAAUE,EAAVF,MAEFG,EAAWC,cACXT,EAAOU,aAAY,SAACR,GAAD,OAA6BA,EAAMJ,MAAMO,MAC5DN,EAAOW,aAAY,SAACR,GAAD,OAA6BA,EAAMH,KAAKM,MAE3DM,EAAWC,uBAAY,kBAAMJ,EDIhB,SAACH,EAAeN,GAAhB,MAAmC,CAAEK,KAAM,WAAYC,QAAON,QCJrCc,CAAQR,GAAQN,MAAQ,CAACM,EAAON,EAAMS,IAElF,OACI,sBAAKZ,cAAY,YAAYkB,UAAWf,EAAO,OAAS,GAAxD,UACI,uBAAOK,KAAK,WAAWW,QAAShB,EAAMY,SAAUA,IAC/CX,MCXAgB,EAAe,WACxB,IAAMR,EAAWC,cAEXX,EAAQY,aAAY,SAACR,GAAD,OAA6BA,EAAMJ,SACvDE,EAAOU,aAAY,SAACR,GAAD,OAA6BA,EAAMF,QAEtDW,EAAWC,uBAAY,YAAiB,IAAdK,EAAa,EAAbA,OAC5BT,EFEe,SAACR,GAAD,MAAmB,CAAEI,KAAM,WAAYJ,QEF7CkB,CAAQD,EAAOE,UACzB,CAACX,IAEEY,EAAUR,uBAAY,WACxBJ,EFHe,SAACR,GAAD,MAAmB,CAAEI,KAAM,WAAYJ,QEG7CqB,CAAQrB,MAClB,CAACQ,EAAUR,IAEd,OACI,gCACI,gCACI,uBAAOJ,cAAY,YAAYuB,MAAOnB,EAAMW,SAAUA,IACtD,wBAAQf,cAAY,aAAawB,QAASA,EAA1C,iEAEJ,qBAAKxB,cAAY,OAAOkB,UAAU,OAAlC,SACKhB,EAAMwB,KAAI,SAACtB,EAAMuB,GAAP,OAAa,cAAC,EAAD,CAAkBlB,MAAOkB,GAAVA,YCtB1CC,EAAW,WACpB,OACI,qCACI,oBAAI5B,cAAY,aAAhB,kBACA,kDACA,cAAC,EAAD,QCHC6B,EAAkB,WAC3B,OACI,gCACI,gCACI,cAAC,IAAD,CAAM7B,cAAY,YAAY8B,GAAG,IAAjC,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,sBAEJ,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,SAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACI,cAAC,EAAD,aCVdC,G,ML4CYC,YAA8C5B,IK1ChE6B,IAASC,OACL,cAAC,IAAD,UACI,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACI,cAAC,EAAD,QAGRI,SAASC,eAAe,W","file":"static/js/main.d0d8d9c3.chunk.js","sourcesContent":["import { FC } from 'react';\n\nexport const About: FC = () => {\n    return (\n        <>\n            <h1 data-testid=\"page-title\">About</h1>\n            <p>This is an example application (published by GitHub Actions).</p>\n        </>\n    );\n};\n","import { createStore } from 'redux';\n\nexport interface ApplicationState {\n    text: string;\n    items: string[];\n    done: Record<number, boolean>;\n}\n\nconst items = ['Позавтракать', 'Сходить в магазин', 'Покормить кота'];\n\nconst DEFAULT_STATE = { items, done: {}, text: '' };\n\n// actions\nexport const addItem = (text: string) => ({ type: 'ADD_ITEM', text } as const);\nexport const setText = (text: string) => ({ type: 'SET_TEXT', text } as const);\nexport const setDone = (index: number, done: boolean) => ({ type: 'SET_DONE', index, done } as const);\n\nexport type Action = ReturnType<typeof addItem> | ReturnType<typeof setText> | ReturnType<typeof setDone>;\n\n// reducer\nconst rootReducer = (state: ApplicationState = DEFAULT_STATE, action: Action) => {\n    switch (action.type) {\n        case 'ADD_ITEM':\n            return { \n                ...state, \n                text: '',\n                items: [...state.items, action.text],\n            };\n        case 'SET_TEXT':\n            return {\n                ...state,\n                text: action.text\n            };\n        case 'SET_DONE':\n            return {\n                ...state,\n                done: {\n                    ...state.done,\n                    [action.index]: action.done\n                }\n            };\n        default:\n            return state;\n    }\n};\n\n// epics\n\n\n\nexport function initStore() {\n\n    const store = createStore<ApplicationState, Action, {}, {}>(rootReducer);\n\n    return store;\n}","import { FC, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ApplicationState, setDone } from '../store';\n\nexport const TodoItem: FC<{ index: number }> = props => {\n    const { index } = props;\n\n    const dispatch = useDispatch(); \n    const text = useSelector((state: ApplicationState) => state.items[index]);\n    const done = useSelector((state: ApplicationState) => state.done[index]);\n\n    const onChange = useCallback(() => dispatch(setDone(index, !done)), [index, done, dispatch]);\n\n    return (\n        <div data-testid=\"list-item\" className={done ? \"done\" : \"\"}>\n            <input type=\"checkbox\" checked={done} onChange={onChange} />\n            {text}\n        </div>\n    );\n}","import { FC, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ApplicationState, addItem, setText } from '../store';\nimport { TodoItem } from './TodoItem';\n\nexport const TodoList: FC = () => {\n    const dispatch = useDispatch();\n    \n    const items = useSelector((state: ApplicationState) => state.items);\n    const text = useSelector((state: ApplicationState) => state.text);\n    \n    const onChange = useCallback(({ target }) => {\n        dispatch(setText(target.value));\n    }, [dispatch]);\n\n    const onClick = useCallback(() => {\n        dispatch(addItem(text));\n    }, [dispatch, text]);\n\n    return (\n        <div>\n            <div>\n                <input data-testid=\"input-add\" value={text} onChange={onChange} />\n                <button data-testid=\"button-add\" onClick={onClick}>Добавить</button>\n            </div>\n            <div data-testid=\"list\" className=\"list\">\n                {items.map((text, i) => <TodoItem key={i} index={i} />)}\n            </div>\n        </div>\n    );\n}\n\n","import { FC } from 'react';\n\nimport { TodoList } from '../components/TodoList';\n\nexport const Home: FC = () => {\n    return (\n        <>\n            <h1 data-testid=\"page-title\">Home</h1>\n            <p>This is the list.</p>\n            <TodoList />\n        </>\n    );\n};","import { FC } from 'react';\nimport { Switch, Route, Link  } from 'react-router-dom';\n\nimport { About } from './pages/About';\nimport { Home } from './pages/Home';\n\nexport const Application: FC = () => {\n    return (\n        <div>\n            <nav>\n                <Link data-testid=\"link-home\" to=\"/\">Home</Link>\n                <Link to=\"/about\">About</Link>\n            </nav>\n            <Switch>\n                <Route path=\"/about\">\n                    <About />\n                </Route>\n                <Route path=\"/\">\n                    <Home />\n                </Route>\n            </Switch>\n        </div>\n    );\n} ","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Application } from './Application';\n\nimport './index.css';\nimport { initStore } from './store';\n\nconst store = initStore();\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store} >\n            <Application />\n        </Provider>\n    </BrowserRouter>, \n    document.getElementById('root')\n);\n"],"sourceRoot":""}